---
import instagramSvg from '../svg/instagram.svg';
---

<div class="row align-items-center row-email">
    <div class="magnetic7 col" style="display: flex; align-items: center; justify-content: center;">
        <h2 style="height: 100%">
            <button class="" id="email_button" aria-label="Click here to copy the email">
                <span class="cursor-hover email_text">RINAVEREMEJCHIK@GMAIL.COM</span>
                <img class="clickme-svg" src="./svg/clickme.svg" draggable="false" alt="click here!">
            </button>
        </h2>
    </div>
</div>
<div class="row align-items-center row-instagram">
    <div class="magnetic7 col" style="display: flex; align-items: center; justify-content: center;">
        <a target="_blank" rel="noopener noreferrer" href="https://www.instagram.com/rinav_retouch/" class="link-instagram">
            <img class="link-instagram__icon" src="../svg/instagram.svg" draggable="false" alt="instagram link">
            <span class="shape">
                <span></span>
                <span></span>
                <span></span>
                <span></span>
                <span></span>
                <span></span>
                <span></span>
                <span></span>
            </span>
        </a>
    </div>
</div>

<style lang="sass">
@import '../styles/vars'

.link-instagram
    margin-left: 1vw
    width: 3vw
    height: 3vw
    @media (max-width : 576px)
        margin-top: 4vh
        width: 7vw
        height: 7vw

.link-instagram__icon
    user-select: none
    user-drag: none
    width: 100%
    height: 100%
    transition: 0.3s cubic-bezier(0.75, -1.27, 0.3, 2.33) transform

.link-instagram
    cursor: pointer
    display: block
    position: relative
    span.shape
        z-index: 10000 !important
        height: 100%
        width: 100%
        position: absolute
        top: 0
        left: 0
        span
            content:""
            position: absolute
            margin: auto
            height: 6px
            opacity: 0.5
            width: 1.8px
            background: $color_cursor
            opacity: 0
            z-index: 10000 !important
        span:nth-of-type(1) 
            top: -5px
            left: 0
            right: 0
        span:nth-of-type(2)
            bottom: -5px
            left: 0
            right: 0
        span:nth-of-type(3)
            top:0
            bottom: 0
            left: -3px
        span:nth-of-type(4)
            top:0
            bottom: 0
            right: -3px
        span:nth-of-type(5)
            top: -3px
            left: -100%
            right: 0
            transform: rotate(-45deg)
        span:nth-of-type(6)
            top: -3px
            left: 0
            right: -100%
            transform: rotate(45deg)
        span:nth-of-type(7)
            bottom: -3px
            right: 0
            left: -100%
            transform: rotate(45deg)
        span:nth-of-type(8)
            bottom: -3px
            left: 0
            right: -100%
            transform: rotate(-45deg)

.link-instagram.active 
    span 
        span:nth-of-type(1)
            animation: anim-1 0.4s ease-out 1
        span:nth-of-type(2)
            animation: anim-2 0.4s ease-out 1
        span:nth-of-type(3)
            animation: anim-3 0.4s ease-out 1
        span:nth-of-type(4)
            animation: anim-4 0.4s ease-out 1
        span:nth-of-type(5)
            animation: anim-5 0.4s ease-out 1
        span:nth-of-type(6)
            animation: anim-6 0.4s ease-out 1
        span:nth-of-type(7)
            animation: anim-7 0.4s ease-out 1
        span:nth-of-type(8)
            animation: anim-8 0.4s ease-out 1

@keyframes anim-1
    0%
        transform: scaleY(0.5)
        opacity: 0
    50%
        transform: translateY(-5px) scaleY(1.4)
        opacity: 0.5
    100%
        transform: translateY(-10px) scaleY(0.5)
        opacity: 0
@keyframes anim-2
    0%
        transform: scaleY(1)
        opacity: 0
    50%
        transform: translateY(5px) scaleY(1.4)
        opacity: 0.5
    100%
        transform: translateY(10px) scaleY(0.5)
        opacity: 0
@keyframes anim-3
    0%
        transform: rotate(90deg) scaleX(0.5)
        opacity: 0
    50%
        transform: rotate(90deg) translateY(3px) scaleX(1.4)
        opacity: 0.5
    100%
        transform: rotate(90deg) translateY(7px) scaleX(0.5)
        opacity: 0
@keyframes anim-4
    0%
        transform: rotate(90deg) scaleX(0.5)
        opacity: 0
    50%
        transform: rotate(90deg) translateY(-3px) scaleX(1.4)
        opacity: 0.5
    100%
        transform: rotate(90deg) translateY(-7px) scaleX(0.5)
        opacity: 0

@keyframes anim-5
    0%
        transform: rotate(-45deg) scaleY(0.5)
        opacity: 0
    50%
        transform: rotate(-45deg) translateY(-4px) scaleY(1.4)
        opacity: 0.5
    100%
        transform: rotate(-45deg) translateY(-8px) scaleY(0.5)
        opacity: 0
@keyframes anim-6
    0%
        transform: rotate(45deg) scaleY(0.5)
        opacity: 0
    50%
        transform: rotate(45deg) translateY(-4px) scaleY(1.4)
        opacity: 0.5
    100%
        transform: rotate(45deg) translateY(-8px) scaleY(0.5)
        opacity: 0
@keyframes anim-7
    0%
        transform: rotate(45deg) scaleY(0.5)
        opacity: 0
    50%
        transform: rotate(45deg) translateY(4px) scaleY(1.4)
        opacity: 0.5
    100%
        transform: rotate(45deg) translateY(8px) scaleY(0.5)
        opacity: 0
@keyframes anim-8
    0%
        transform: rotate(-45deg) scaleY(0.5)
        opacity: 0
    50%
        transform: rotate(-45deg) translateY(4px) scaleY(1.4)
        opacity: 0.5
    100%
        transform: rotate(-45deg) translateY(8px) scaleY(0.5)
        opacity: 0

#email_button
    border     : 0
    background : rgb(0, 0, 0, 0)
    transition : 0.3s cubic-bezier(0.75, -1.27, 0.3, 2.33) transform
    height: 100%
    padding-bottom: 0.3em
    position: relative
    @media (max-width : 576px)
        user-select: text

.clickme-svg
    display: none
    position: absolute
    object-fit: contain
    bottom: 0px
    right: 60px
    height: 30px
    opacity: 0.8
    transition: 0.3s opacity
    @media (max-width : 576px)
        display: block

span.email_text
    font-size  : 2vw
    font-weight: 600
    color: $color_text
    @media (max-width : 576px)
        user-select: text
        font-size: 4vw

div#copied_hint
    content        : ""
    font-size      : 12px
    font-weight    : 500
    color          : white
    position       : absolute
    z-index        : 90
    height         : 15vh
    width          : 15vh
    border-radius  : 50%
    background     : radial-gradient($color_copied 15%, rgb(0,0,0,0) 60%)
    animation      : 2.5s cubic-bezier(.7, 1, .30, 1) anim1 both
    opacity        : 0
    display        : flex
    justify-content: center
    align-items    : center

span#copied_hint
    pointer-events: none
    user-select   : none
    opacity       : 1

// old anim
@keyframes anim1
    0%
        transform: scale(0.5)
        opacity  : 0.6
    50%
        transform: scale(1.4)
        opacity  : 1
    100%
        transform: scale(1.7)
        opacity  : 0

@keyframes anim2
    0%
        transform: scale(1)
    50%
        transform: scale(1.4)
    100%
        transform: scale(1)

</style>

<style is:global lang="sass">
    @import '../styles/vars'


div#copied_hint
    content        : ""
    font-size      : 12px
    font-weight    : 500
    color          : white
    position       : absolute
    z-index        : 90
    height         : 15vh
    width          : 15vh
    border-radius  : 50%
    background     : radial-gradient($color_copied 15%, rgb(0,0,0,0) 60%)
    animation      : 2.5s cubic-bezier(.7, 1, .30, 1) anim1 both
    opacity        : 0
    display        : flex
    justify-content: center
    align-items    : center

span#copied_hint
    pointer-events: none
    user-select   : none
    opacity       : 1

// old anim
@keyframes anim1
    0%
        transform: scale(0.5)
        opacity  : 0.6
    50%
        transform: scale(1.4)
        opacity  : 1
    100%
        transform: scale(1.7)
        opacity  : 0
</style>

<script>
    
    import gsap from 'gsap'
    import $ from 'jquery';

    let dont_show_hint = false;
    const cursorshape = $("#cursor-shape");
    const cursortext =  $("#cursor-text");
    
    $(".link-instagram").on('click', function(e: Event){
        e.preventDefault();
        $('.link-instagram__icon').css('transform', 'scale(0.86)')
        setTimeout(() =>  {
            $('.link-instagram__icon').css('transform', 'scale(1)')
            window.open('https://www.instagram.com/rinav_retouch/', '_blank').focus();
        }, 200);
        $(this).addClass("active").delay(300).queue(function(next){
            $(this).removeClass("active");
            next();
        });
    });

    
    //  mouse position 

    const currentMousePos = { x: -1, y: -1 };

    $(document).on("mousemove", function(e) {
        currentMousePos.x = e.pageX;
        currentMousePos.y = e.pageY;
    });

    // email button click event

    let email_button = $("#email_button");

    function unsecuredCopyToClipboard(text) {
        const textArea = document.createElement("textarea");
        textArea.value = text;
        document.body.appendChild(textArea);
        textArea.focus();
        textArea.select();
        try {
        document.execCommand('copy');
        } catch (err) {
        console.error('Unable to copy to clipboard', err);
        }
        document.body.removeChild(textArea);
    }

    email_button.click(function(){
        email_button.css('transform', 'scale(0.93)')
        setTimeout(() =>  {
            email_button.css('transform', 'scale(1)')
        }, 200);
        if(window.isSecureContext && navigator.clipboard) {
            navigator.clipboard.writeText('rinaveremejchik@gmail.com')
        } else {
            unsecuredCopyToClipboard('rinaveremejchik@gmail.com');
        }
        const circle = document.createElement(`div`);
        circle.id = `copied_hint`;
        const text = circle.appendChild(document.createElement(`span`));
        text.id = `copied_hint`;
        text.textContent = `Copied!`;
        if(window.screen.width <= 576) {
            circle.style.top = `calc(${currentMousePos.y - 55}px)`
            circle.style.left = `calc(${currentMousePos.x - 55}px)`
            document.body.append(circle);
        } else {
            circle.style.top = `calc(${currentMousePos.y}px - 7.5vh)`
            circle.style.left = `calc(${currentMousePos.x}px - 7.5vh)`
            document.body.appendChild(circle);
        }
        dont_show_hint = true;
        $(".clickme-svg").css('opacity', '0');
        cursorshape.removeClass(" show_hint_copy");
        cursortext.removeClass(" show_hint_copy");
        setTimeout(() =>  {
            circle.remove();
        }, 1700);
        setTimeout(() =>  {
            dont_show_hint = false;
        }, 3000);
    });

    function setupMagnetic() {
        for(let i = 1; i <= 20; i++) {
            const isMobileDevice = $(window).width() <= 480;
            if(isMobileDevice) return;
            const magneticList = document.querySelectorAll('.magnetic' + i);
            magneticList.forEach(function(elem){
            $(document).on('mousemove touch', function(e){
                magnetize(elem, e, i/100);
            });
            })
        }
    }
    setupMagnetic() 

    function magnetize(el, e, magnetOffset) {
        if(window.screen.width <= 576)
            return
        let mX = e.pageX,
            mY = e.pageY;
        const item = $(el);

        const customDist = item.data('dist') * 20 || 250;
        const centerX = item.offset().left + (item.width()/2);
        const centerY = item.offset().top + (item.height()/2);

        let deltaX = Math.floor((centerX - mX)) * -magnetOffset;
        let deltaY = Math.floor((centerY - mY)) * -magnetOffset;

        let distance = calculateDistance(item, mX, mY);
            
        if(distance < customDist + 30){
            gsap.to(item, 0.9, {y: deltaY*1.3, x: deltaX});
            item.addClass('magnet');
        }
        else {
            gsap.to(item, 0.9, {y: 0, x: 0});
            item.removeClass('magnet');
        }

    }

    function calculateDistance(elem, mouseX, mouseY) {
        return Math.floor(Math.sqrt(Math.pow(mouseX - (elem.offset().left+(elem.width()/2)), 2) + (Math.pow(mouseY - (elem.offset().top+(elem.height()/2)), 2)*1.5)));
    }

</script>